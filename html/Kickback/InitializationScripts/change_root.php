<?php
declare(strict_types=1);

// -------------------------------------------------------------------------- //
// !!!!!!!!!!!!!!!!!!!!!!!!!! DO NOT EDIT THIS FILE !!!!!!!!!!!!!!!!!!!!!!!!! //
// -------------------------------------------------------------------------- //
//
// This file may be executed from within an incorrect script root,
// which introduces pitfalls for file inclusion (correct use of `require_once`)
// as well as pitfalls for version control and change management.
// Hence, it is best to just avoid editing this file, unless you must.
//
// As of this writing, the only foreseeable reason to edit this file would
// be if one is redesigning the init system for the entire Kickback namespace.
//
// If you just want to add initialization code, then it should probably be
// placed into another initscript, which should be called from `common_init.php`.
// Such will ensure that the additional initialization logic is
// executed from a more sane context: after changing script root.
//
// If you need to add a special entry point, to indicate that we are not
// in the ordinary web/cli context, then use `Kickback\InitializationScripts\init_for_phpstan.php`
// as an example and keep it simple.
//
// ### Why not edit this file? (In detail) ###
//
// This file, and any files that come before it in the bootstrapping
// process (ex: `init.php`), have an important special (and tricky) property:
//
// It may be running from the `prod` SCRIPT_ROOT while the site is being
// accessed in `beta` mode. Normally, if the site is in `beta` mode,
// we would be in a different SCRIPT_ROOT for `beta`.
//
// It might be running from `prod` while in `beta` mode because the scripts
// including (`require`'ing) this file do not have \Kickback\SCRIPT_ROOT
// defined yet, and must rely on using something like `$_SERVER['DOCUMENT_ROOT']`
// to locate the `init.php` file. And it's that use of `$_SERVER['DOCUMENT_ROOT']`
// that can place us at the incorrect script root.
//
// One important implication of the above is that we should not `require_once`
// on relative paths from this file, except for `script_root.php` itself.
// We need to use a relative path for `script_root.php` because it's what
// computes+defines \Kickback\SCRIPT_ROOT, and we have no better options
// for locating scripts until that is done. AFTER that, we should reference
// scripts using ONLY \Kickback\SCRIPT_ROOT (while in this file),
// thus restoring inclusion to the correct script root.
//
// The above also has implications for version control and change management:
// If a change is made to this file (or the `init*.php` files) and pulled
// into the `beta` environment, then the `beta` environment will actually
// behave as if this change was NOT made. This would happen because execution
// is actually beginning in `prod`'s script root, not `beta`'s script root.
// So only `prod`'s `init*.php` and `change_root.php` scripts will be used;
// the `beta` ones will be ignored. In that situation, the only way to
// affect changes made to `init*.php` or `change_root.php` is to apply
// them to BOTH `prod` and `beta` at the same time. (If it's JUST the
// `init*.php` and `change_root.php` files, and no other changes need to
// be done in sync with those, then just updating `prod` will be sufficient
// for both the `prod` and `beta` environments.)
//
// Because of the above bizarre and tricky caveats, this file is kept
// as simple as possible: it defines SCRIPT_ROOT and then uses that
// definition to pass initialization to the `common_init.php` that's
// located in the correct SCRIPT_ROOT.
//
// Of course, if reality is forcing you to make edits here (or in `init*.php`),
// then that's probably going to happen.
//
// There are no sacred cows here. However, here be dragons.
//
// Please do your best to read the above and understand the implications
// (and necessary countermeasures) before proceeding with any edits.

// File that declares \Kickback\SCRIPT_ROOT.
// Do this first, so that we can use it to locate the correct `common_init.php`.
require_once("script_root.php");

// Escalate initialization into the `common_init` phase;
// once in `common_init.php`, we will be executing from the correct SCRIPT_ROOT,
// and will thus be able to edit that file or any of its dependencies with
// far less fear of breaking `prod`/`beta` handover.
require_once(\Kickback\SCRIPT_ROOT . "/Kickback/InitializationScripts/common_init.php");

?>
